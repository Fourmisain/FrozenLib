import java.nio.file.Files

pluginManagement {
    repositories {
        maven {
            setName("Quilt")
            setUrl("https://maven.quiltmc.org/repository/release/")
        }
		maven {
			setName("Quilt Snapshot")
			setUrl("https://maven.quiltmc.org/repository/snapshot/")
		}
        maven {
            setName("Fabric")
            setUrl("https://maven.fabricmc.net/")
        }
        jcenter()
        maven {
            setName("Forge")
            setUrl("https://files.minecraftforge.net/maven/")
        }
        maven {
            setName("Jitpack")
            setUrl("https://jitpack.io/")
        }
        mavenCentral()
        gradlePluginPortal()
    }
}

rootProject.setName("FrozenLib")

// Build logic is an included build for holding the convention plugins for generating libraries and modules.
// Source: Quilt Standard Libraries
includeBuild("build-logic")

def library(String library) {
	include(library)

	def libraryFolder = "lib/"
	def libraryProject = project(":$library")
	libraryProject.projectDir = file("$libraryFolder$library")

	if (Files.exists(libraryProject.projectDir.toPath().resolve("DISABLE"))) {
		return
	}

	rootProject.projectDir.toPath().resolve("$libraryFolder$library/").toFile().listFiles().each {
		// Is the module disabled?
		if (it.isDirectory()
				&& it.name != "src" // Ignore sources
				&& it.name != "build" // Ignore build artifacts
				&& !it.name.startsWith(".") // Ignore anything hidden on unix-like OSes
		) {
			// Libraries can be disabled by adding a file named DISABLE at the root of its directory
			if (Files.exists(it.toPath().resolve("build.gradle")) && Files.notExists(it.toPath().resolve("DISABLE"))) {
				include "$library:$it.name"
			}
		}
	}
}
