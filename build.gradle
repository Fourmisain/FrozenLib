plugins {
    id 'architectury-plugin' version '3.4-SNAPSHOT'
	id 'dev.architectury.loom' version '0.12.0-SNAPSHOT' apply false
	//id 'io.github.juuxel.loom-quiltflower' version '1.7.+'
    //id 'eclipse'
    //id 'idea'
    //id 'java-library'
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    //apply plugin: "io.github.juuxel.loom-quiltflower"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings(loom.layered {
            // please annoy treetrain if this doesnt work
            it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2")
            it.parchment("org.parchmentmc.data:parchment-1.19.2:${parchment_mappings}@zip")
            it.officialMojangMappings {
                setNameSyntheticMembers(false)
            }
        })
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        maven {
            url = 'https://jitpack.io'
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"

            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url = 'https://maven.terraformersmc.com'

            content {
                includeGroup "com.terraformersmc"
            }
        }
        maven {
            url = 'https://maven.shedaniel.me/'
        }
        maven {
            url 'https://cursemaven.com'

            content {
                includeGroup "curse.maven"
            }
        }
        /*maven {
            name "Siphalor's Maven"
            url "https://maven.siphalor.de"
        }*/
        maven {
            url "https://maven.flashyreese.me/releases"
        }
        maven {
            url "https://maven.flashyreese.me/snapshots"
        }
        maven {
            url = 'https://maven.parchmentmc.org'
        }
        maven {
            name = 'Quilt'
            url = 'https://maven.quiltmc.org/repository/release'
        }

        flatDir {
            dirs 'libs'
        }
    }
}

String getVersion() {
    String version = "${rootProject.mod_version}+${rootProject.minecraft_version}"

    if (findProperty("releaseType") != "stable") {
        version += "-unstable"
    }

    return version
}